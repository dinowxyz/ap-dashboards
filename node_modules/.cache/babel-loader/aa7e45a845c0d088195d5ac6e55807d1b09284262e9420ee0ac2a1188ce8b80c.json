{"ast":null,"code":"/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function noop() {}\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n      return true;\n    }\n    return false;\n  }\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n      len = loopable.length;\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone$1(source) {\n    if (isArray(source)) {\n      return source.map(clone$1);\n    }\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone$1(source[keys[k]]);\n      }\n      return target;\n    }\n    return source;\n  }\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone$1(sval);\n    }\n  }\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n      return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n      if (!isObject(source)) {\n        continue;\n      }\n      const keys = Object.keys(source);\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n    return target;\n  }\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone$1(sval);\n    }\n  }\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n  const keyResolvers = {\n    '': v => v,\n    x: o => o.x,\n    y: o => o.y\n  };\n  function resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n  }\n  function _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return obj => {\n      for (const k of keys) {\n        if (k === '') {\n          break;\n        }\n        obj = obj && obj[k];\n      }\n      return obj;\n    };\n  }\n  function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts) {\n      tmp += part;\n      if (tmp.endsWith('\\\\')) {\n        tmp = tmp.slice(0, -1) + '.';\n      } else {\n        keys.push(tmp);\n        tmp = '';\n      }\n    }\n    return keys;\n  }\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  const defined = value => typeof value !== 'undefined';\n  const isFunction = value => typeof value === 'function';\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n  }\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n  function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n    let e = 1;\n    let p = 0;\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n    return p;\n  }\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n  function _isBetween(value, start, end) {\n    let epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1e-6;\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n  }\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    return {\n      lo,\n      hi\n    };\n  }\n  const _lookupByKey = (table, key, value, last) => _lookup(table, value, last ? index => table[index][key] <= value : index => table[index][key] < value);\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while (start < end && values[start] < min) {\n      start++;\n    }\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n      return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          const res = base.apply(this, args);\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n      return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n      return;\n    }\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n    if (set.size === ilen) {\n      return items;\n    }\n    return Array.from(set);\n  }\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n    return window.requestAnimationFrame;\n  }();\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n    let ticking = false;\n    let args = [];\n    return function () {\n      for (var _len2 = arguments.length, rest = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        rest[_key2] = arguments[_key2];\n      }\n      args = updateArgs(rest);\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n  function debounce(fn, delay) {\n    let timeout;\n    return function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay, args);\n      } else {\n        fn.apply(this, args);\n      }\n      return delay;\n    };\n  }\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n  const _textX = (align, left, right, rtl) => {\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n  };\n  function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max, true).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n    return {\n      start,\n      count\n    };\n  }\n  function _scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n        this._request = null;\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n    _update() {\n      let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      let remaining = 0;\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          this._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          this._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n      this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n      this._refresh();\n    }\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n    stop(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }\n  var animator = new Animator();\n\n  /*!\n   * @kurkle/color v0.2.1\n   * https://github.com/kurkle/color#readme\n   * (c) 2022 Jukka Kurkela\n   * Released under the MIT License\n   */\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n  const map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = [...'0123456789ABCDEF'];\n  const h1 = b => hex[b & 0xF];\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n  const isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map$1[str[1]] * 17,\n          g: 255 & map$1[str[2]] * 17,\n          b: 255 & map$1[str[3]] * 17,\n          a: len === 5 ? map$1[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map$1[str[1]] << 4 | map$1[str[2]],\n          g: map$1[str[3]] << 4 | map$1[str[4]],\n          b: map$1[str[5]] << 4 | map$1[str[6]],\n          a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n        };\n      }\n    }\n    return ret;\n  }\n  const alpha = (a, f) => a < 255 ? f(a) : '';\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f) : undefined;\n  }\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n      return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    };\n    return [f(0), f(8), f(4)];\n  }\n  function hsv2rgbn(h, s, v) {\n    const f = function (n) {\n      let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n      return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    };\n    return [f(5), f(3), f(1)];\n  }\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n    return rgb;\n  }\n  function hueValue(r, g, b, d, max) {\n    if (r === max) {\n      return (g - b) / d + (g < b ? 6 : 0);\n    }\n    if (g === max) {\n      return (b - r) / d + 2;\n    }\n    return (r - g) / d + 4;\n  }\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = hueValue(r, g, b, d, max);\n      h = h * 60 + 0.5;\n    }\n    return [h | 0, s || 0, l];\n  }\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) {\n      return;\n    }\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  const map$2 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names$1 = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names$1);\n    const tkeys = Object.keys(map$2);\n    let i, j, k, ok, nk;\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$2[k]);\n      }\n      k = parseInt(names$1[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n    return unpacked;\n  }\n  let names;\n  function nameParse(str) {\n    if (!names) {\n      names = unpack();\n      names.transparent = [0, 0, 0, 0];\n    }\n    const a = names[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) {\n      return;\n    }\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n    g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n    b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n  const to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\n  const from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  function interpolate$1(rgb1, rgb2, t) {\n    const r = from(b2n(rgb1.r));\n    const g = from(b2n(rgb1.g));\n    const b = from(b2n(rgb1.b));\n    return {\n      r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n      g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n      b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n      a: rgb1.a + t * (rgb2.a - rgb1.a)\n    };\n  }\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n  function clone(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n    return v;\n  }\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n    return hueParse(str);\n  }\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n      const type = typeof input;\n      let v;\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n      this._rgb = v;\n      this._valid = !!v;\n    }\n    get valid() {\n      return this._valid;\n    }\n    get rgb() {\n      var v = clone(this._rgb);\n      if (v) {\n        v.a = b2n(v.a);\n      }\n      return v;\n    }\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : undefined;\n    }\n    hexString() {\n      return this._valid ? hexString(this._rgb) : undefined;\n    }\n    hslString() {\n      return this._valid ? hslString(this._rgb) : undefined;\n    }\n    mix(color, weight) {\n      if (color) {\n        const c1 = this.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        this.rgb = c1;\n      }\n      return this;\n    }\n    interpolate(color, t) {\n      if (color) {\n        this._rgb = interpolate$1(this._rgb, color._rgb, t);\n      }\n      return this;\n    }\n    clone() {\n      return new Color(this.rgb);\n    }\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n  }\n  function index_esm(input) {\n    return new Color(input);\n  }\n  function isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n      const type = value.toString();\n      return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n  }\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n    const keys = key.split('.');\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n  }\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n  }\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true,\n        includeInvisible: false\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.drawActiveElementsOnTop = true;\n      this.describe(_descriptors);\n    }\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n            return valueOrDefault(local, target);\n          },\n          set(value) {\n            this[privateName] = value;\n          }\n        }\n      });\n    }\n  }\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n    return parent;\n  }\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n    return valueInPixels;\n  }\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n  const positions = ['top', 'right', 'bottom', 'left'];\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n  function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n    return {\n      x,\n      y,\n      box\n    };\n  }\n  function getRelativePosition(evt, chart) {\n    if ('native' in evt) {\n      return evt;\n    }\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n  const round1 = v => Math.round(v * 10) / 10;\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n    return {\n      width,\n      height\n    };\n  }\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n    return false;\n  }\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n    return passiveSupported;\n  }();\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n    return longest;\n  }\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n    return longest;\n  }\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n  function drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n  }\n  function drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n      type = style.toString();\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n    ctx.beginPath();\n    switch (style) {\n      default:\n        if (w) {\n          ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n        } else {\n          ctx.arc(x, y, radius, 0, TAU);\n        }\n        ctx.closePath();\n        break;\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          width = w ? w / 2 : size;\n          ctx.rect(x - width, y - size, 2 * width, 2 * size);\n          break;\n        }\n        rad += QUARTER_PI;\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n      case 'crossRot':\n        rad += QUARTER_PI;\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'line':\n        xOffset = w ? w / 2 : Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n  }\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n  function renderText(ctx, text, x, y, font) {\n    let opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n      ctx.fillText(line, x, y, opts.maxWidth);\n      decorateText(ctx, x, y, line, opts);\n      y += font.lineHeight;\n    }\n    ctx.restore();\n  }\n  function setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n  }\n  function decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n  }\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n  function _createResolver(scopes) {\n    let prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n    let rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n    let fallback = arguments.length > 3 ? arguments[3] : undefined;\n    let getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : () => scopes[0];\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        target[prop] = storage[prop] = value;\n        delete target._keys;\n        return true;\n      }\n    });\n  }\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n    });\n  }\n  function _descriptors(proxy) {\n    let defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      scriptable: true,\n      indexable: true\n    };\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n  function _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n      return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n  }\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n  }\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n  }\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n      value = [];\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n    return value;\n  }\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n  function addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, value);\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n    return false;\n  }\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n      return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key, value);\n      if (key === null) {\n        return false;\n      }\n    }\n    return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n  function addScopesFromKey(set, allScopes, key, fallback, item) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n  }\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n    return target;\n  }\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n      const value = scope[key];\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n  }\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n    return Array.from(set);\n  }\n  function _parseObjectDataRadialScale(meta, data, start, count) {\n    const {\n      iScale\n    } = meta;\n    const {\n      key = 'r'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        r: iScale.parse(resolveObjectKey(item, key), index)\n      };\n    }\n    return parsed;\n  }\n  const EPSILON = Number.EPSILON || 1e-14;\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n  function monotoneCompute(points, mK) {\n    let indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n  function splineCurveMonotone(points) {\n    let indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n      if (!inArea) {\n        continue;\n      }\n      point = points[i];\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n  const atEdge = t => t === 0 || t === 1;\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack(t) {\n      let s = 1.70158;\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n  }\n  const intlCache = new Map();\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n  }\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n    value = +matches[2];\n    switch (matches[3]) {\n      case 'px':\n        return value;\n      case '%':\n        value /= 100;\n        break;\n    }\n    return size * value;\n  }\n  const numberOrZero = v => +v || 0;\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n    for (const prop of keys) {\n      ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n  }\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n      if (value === undefined) {\n        continue;\n      }\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n        return value;\n      }\n    }\n  }\n  function _addGrace(minmax, grace, beginAtZero) {\n    const {\n      min,\n      max\n    } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n    return {\n      min: keepZero(min, -Math.abs(change)),\n      max: keepZero(max, change)\n    };\n  }\n  function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n  }\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n      setWidth(w) {\n        width = w;\n      },\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n        return align === 'right' ? 'left' : 'right';\n      },\n      xPlus(x, value) {\n        return x - value;\n      },\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n    };\n  };\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n      setWidth(w) {},\n      textAlign(align) {\n        return align;\n      },\n      xPlus(x, value) {\n        return x + value;\n      },\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n    };\n  };\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n    return {\n      between: _isBetween,\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n  function normalizeSegment(_ref) {\n    let {\n      start,\n      end,\n      count,\n      loop,\n      style\n    } = _ref;\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n    if (loop) {\n      start += count;\n      end += count;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n        start--;\n        end--;\n      }\n      start %= count;\n      end %= count;\n    }\n    if (end < start) {\n      end += count;\n    }\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = () => inside || startIsBefore();\n    const shouldStop = () => !inside || endIsBefore();\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n      if (point.skip) {\n        continue;\n      }\n      value = normalize(point[property]);\n      if (value === prevValue) {\n        continue;\n      }\n      inside = between(value, startBound, endBound);\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n      prev = i;\n      prevValue = value;\n    }\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n    return result;\n  }\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n    return result;\n  }\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n    while (start < count && points[start].skip) {\n      start++;\n    }\n    start %= count;\n    if (loop) {\n      end += start;\n    }\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n        if (prev.skip) {\n          start = end;\n        }\n      }\n      prev = cur;\n    }\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n    return result;\n  }\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n      return [];\n    }\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n      return splitByStyles(line, [{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n  function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n  }\n  function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const {\n      _datasetIndex: datasetIndex,\n      options: {\n        spanGaps\n      }\n    } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n      const dir = spanGaps ? -1 : 1;\n      if (s === e) {\n        return;\n      }\n      s += count;\n      while (points[s % count].skip) {\n        s -= dir;\n      }\n      while (points[e % count].skip) {\n        e += dir;\n      }\n      if (s % count !== e % count) {\n        result.push({\n          start: s % count,\n          end: e % count,\n          loop: l,\n          style: st\n        });\n        prevStyle = st;\n        start = e % count;\n      }\n    }\n    for (const segment of segments) {\n      start = spanGaps ? start : segment.start;\n      let prev = points[start % count];\n      let style;\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex\n        })));\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n        prev = pt;\n        prevStyle = style;\n      }\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n    return result;\n  }\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    isPatternOrGradient: isPatternOrGradient,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone$1,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _splitKey: _splitKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    _isClickEvent: _isClickEvent,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    drawPointLegend: drawPointLegend,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    _parseObjectDataRadialScale: _parseObjectDataRadialScale,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _isDomSupported: _isDomSupported,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n    _scaleRangesChanged: _scaleRangesChanged,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    createContext: createContext,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    _isBetween: _isBetween,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n  function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n  function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return items;\n    }\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n        return;\n      }\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n  function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n      const {\n        startAngle,\n        endAngle\n      } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n      const {\n        angle\n      } = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      });\n      if (_angleBetween(angle, startAngle, endAngle)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n      const inRange = element.inRange(position.x, position.y, useFinalPosition);\n      if (intersect && !inRange) {\n        return;\n      }\n      const center = element.getCenterPoint(useFinalPosition);\n      const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n      if (!pointInArea && !inRange) {\n        return;\n      }\n      const distance = distanceMetric(position, center);\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n      return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n  }\n  function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n        intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n      }\n    });\n    if (intersect && !intersectsItem) {\n      return [];\n    }\n    return items;\n  }\n  var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const includeInvisible = options.includeInvisible || false;\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n        const elements = [];\n        if (!items.length) {\n          return [];\n        }\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n        return items;\n      },\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n      },\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        const includeInvisible = options.includeInvisible || false;\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n      },\n      x(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n      },\n      y(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n      }\n    }\n  };\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n    return layoutBoxes;\n  }\n  function buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n    return stacks;\n  }\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n    return stacks;\n  }\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n        }];\n      };\n      chart.boxes.push(item);\n    },\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h, {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        });\n      });\n    }\n  };\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n      return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n      return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n    isAttached(canvas) {\n      return true;\n    }\n    updateConfig(config) {}\n  }\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n      config.options.animation = false;\n    }\n  }\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  const isNullOrEmpty = value => value === null || value === '';\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n    return canvas;\n  }\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n  function nodeListContains(nodeList, canvas) {\n    for (const node of nodeList) {\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  }\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n  }\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      return;\n    }\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n      if (width === 0 && height === 0) {\n        return;\n      }\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n    releaseContext(context) {\n      const canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n    return DomPlatform;\n  }\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _detectPlatform: _detectPlatform,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n  };\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n    active() {\n      return this._active;\n    }\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        const resolved = {};\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      const animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n      return animations;\n    }\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      const animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n    return Promise.all(running);\n  }\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n    let options = target.options;\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n    return options;\n  }\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n  function toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n    return keys;\n  }\n  function applyStack(stack, value, dsIndex) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n      return;\n    }\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n        break;\n      }\n      otherValue = stack.values[datasetIndex];\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n    return value;\n  }\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n    return adata;\n  }\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n    return null;\n  }\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n  function createDatasetContext(parent, index) {\n    return createContext(parent, {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n  function createDataContext(parent, index, element) {\n    return createContext(parent, {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n      return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  }\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n  const createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.supportsDecimation = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n      this._update('reset');\n    }\n    _destroy() {\n      const meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n    addElements() {\n      const meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n      this._dataCheck();\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n      const otherScale = this._getOtherScale(scale);\n      const stack = createStack(canStack, meta, this.chart);\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        const otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n    getMaxOverflow() {\n      return false;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      let i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType) {\n      let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      let index = arguments.length > 2 ? arguments[2] : undefined;\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n      const context = () => this.getContext(index, active);\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      let options;\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      const animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    _getSharedOptions(start, mode) {\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const previouslySharedOptions = this._sharedOptions;\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions,\n        includeOptions\n      };\n    }\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n    _insertElements(start, count) {\n      let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n      const move = arr => {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index, ...args]);\n    }\n    _onDataPush() {\n      const count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n    _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      const newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n      const anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n  }\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n        delta = calculateDelta(tickValue, ticks);\n      }\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n      return '';\n    }\n  };\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n  }\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n    return Math.max(spacing, 1);\n  }\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n      return false;\n    }\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n    return diff;\n  }\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n    return result;\n  }\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n      lineValue += validIndex < index ? offset : -offset;\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n    return lineValue;\n  }\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n  function createScaleContext(parent, scale) {\n    return createContext(parent, {\n      scale,\n      type: 'scale'\n    });\n  }\n  function createTickContext(parent, index, tick) {\n    return createContext(parent, {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n    return ret;\n  }\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n      return raw;\n    }\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n      const metas = this.getMatchingVisibleMetas();\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n    getTicks() {\n      return this.ticks;\n    }\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n    update(maxWidth, maxHeight, margins) {\n      const {\n        beginAtZero,\n        grace,\n        ticks: tickOpts\n      } = this.options;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n    buildTicks() {\n      return [];\n    }\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      const labelSizes = this._getLabelSizes();\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n      const display = this._isVisible();\n      const isHorizontal = this.isHorizontal();\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n    isFullSize() {\n      return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n    getLabelForValue(value) {\n      return value;\n    }\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n      const ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n      const labelSizes = this._getLabelSizes();\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n      const display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = optsAtIndex.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      const labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n        let tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        let backdrop;\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n      return items;\n    }\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      let align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n      const labelSizes = this._getLabelSizes();\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign,\n        x\n      };\n    }\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      const chart = this.chart;\n      const position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      let i, ilen;\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      const ctx = this.ctx;\n      const area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      let i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n      if (!title.display) {\n        return;\n      }\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n    get(id) {\n      return this.items[id];\n    }\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n    add() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args);\n    }\n    remove() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('unregister', args);\n    }\n    addControllers() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.controllers);\n    }\n    addElements() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('register', args, this.elements);\n    }\n    addPlugins() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('register', args, this.plugins);\n    }\n    addScales() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('register', args, this.scales);\n    }\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n    removeControllers() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n    removeElements() {\n      for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        args[_key11] = arguments[_key11];\n      }\n      this._each('unregister', args, this.elements);\n    }\n    removePlugins() {\n      for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        args[_key12] = arguments[_key12];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n    removeScales() {\n      for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        args[_key13] = arguments[_key13];\n      }\n      this._each('unregister', args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }\n  var registry = new Registry();\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      const result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n      return true;\n    }\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      const descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }\n  function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n        localIds[plugin.id] = true;\n      }\n    }\n    return {\n      plugins,\n      localIds\n    };\n  }\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n    if (options === true) {\n      return {};\n    }\n    return options;\n  }\n  function createDescriptors(chart, _ref2, options, all) {\n    let {\n      plugins,\n      localIds\n    } = _ref2;\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins) {\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, {\n          plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n    return result;\n  }\n  function pluginOpts(config, _ref3, opts, context) {\n    let {\n      plugin,\n      local\n    } = _ref3;\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n      scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n  }\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n      if (!isObject(scaleConf)) {\n        return console.error(`Invalid scale configuration for scale: ${id}`);\n      }\n      if (scaleConf._proxy) {\n        return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n      }\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n  const keyCache = new Map();\n  const keysCached = new Set();\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n    return keys;\n  }\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n    get platform() {\n      return this._config.platform;\n    }\n    get type() {\n      return this._config.type;\n    }\n    set type(type) {\n      this._config.type = type;\n    }\n    get data() {\n      return this._config.data;\n    }\n    set data(data) {\n      this._config.data = initData(data);\n    }\n    get options() {\n      return this._config.options;\n    }\n    set options(options) {\n      this._config.options = options;\n    }\n    get plugins() {\n      return this._config.plugins;\n    }\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n    clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n      let cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n      const cache = this._cachedScopes(mainScope, resetCache);\n      const cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n    resolveNamedOptions(scopes, names, context) {\n      let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n      return result;\n    }\n    createResolver(scopes, context) {\n      let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n    return cached;\n  }\n  const hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n    for (const prop of names) {\n      const scriptable = isScriptable(prop);\n      const indexable = isIndexable(prop);\n      const value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var version = \"3.9.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n    return item;\n  }\n  const instances = {};\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n  function moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      const intKey = +key;\n      if (intKey >= start) {\n        const value = obj[key];\n        delete obj[key];\n        if (move > 0 || intKey > start) {\n          obj[intKey + move] = value;\n        }\n      }\n    }\n  }\n  function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n      return null;\n    }\n    if (isClick) {\n      return lastEvent;\n    }\n    return e;\n  }\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n      }\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      this.platform.updateConfig(config);\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      this._dataChanges = [];\n      instances[this.id] = this;\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n      this._initialize();\n      if (this.attached) {\n        this.update();\n      }\n    }\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n    get data() {\n      return this.config.data;\n    }\n    set data(data) {\n      this.config.data = data;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      this.config.options = options;\n    }\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        let scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n    reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n    update(mode) {\n      const config = this.config;\n      config.update();\n      const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      const animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      const {\n        _active,\n        _lastEvent\n      } = this;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n    _updateScales() {\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n    _checkEventBindings() {\n      const options = this.options;\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n    _updateHiddenIndices() {\n      const {\n        _hiddenIndices\n      } = this;\n      const changes = this._getUniformDataChanges() || [];\n      for (const {\n        method,\n        start,\n        count\n      } of changes) {\n        const move = method === '_removeElements' ? -count : count;\n        moveNumericKeys(_hiddenIndices, start, move);\n      }\n    }\n    _getUniformDataChanges() {\n      const _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      const datasetCount = this.data.datasets.length;\n      const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n      const changeSet = makeSet(0);\n      for (let i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n        method: a[1],\n        start: +a[2],\n        count: +a[3]\n      }));\n    }\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        this._layers.push(...box._layers());\n      }, this);\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n    _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction(mode) ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n    draw() {\n      let i;\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const metasets = this.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n    isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n    getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n    destroy() {\n      this.notifyPlugins('beforeDestroy');\n      const {\n        canvas,\n        ctx\n      } = this;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image() {\n      return this.canvas.toDataURL(...arguments);\n    }\n    bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n        this._eventHandler(e);\n      };\n      each(this.options.events, type => _add(type, listener));\n    }\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        this.attached = true;\n        this.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        this.attached = false;\n        _remove('resize', listener);\n        this._stop();\n        this._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(_ref4 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref4;\n        const meta = this.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      const changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n    _handleEvent(e, replay, inChartArea) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const useFinalPosition = replay;\n      const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      const isClick = _isClickEvent(e);\n      const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: function () {\n        registry.add(...arguments);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: function () {\n        registry.remove(...arguments);\n        invalidatePlugins();\n      }\n    }\n  });\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n    init(chartOptions) {}\n    formats() {\n      return abstract();\n    }\n    parse(value, format) {\n      return abstract();\n    }\n    format(timestamp, format) {\n      return abstract();\n    }\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n    diff(a, b, unit) {\n      return abstract();\n    }\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n  }\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n  var _adapters = {\n    _date: DateAdapter\n  };\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n    return scale._cache.$bar;\n  }\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n      prev = curr;\n    };\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n    prev = undefined;\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n    return min;\n  }\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n  }\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n  }\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n    if (edge === true) {\n      properties.borderSkipped = {\n        top: true,\n        right: true,\n        bottom: true,\n        left: true\n      };\n      return;\n    }\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n    return edge;\n  }\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n  function setInflateAmount(properties, _ref5, ratio) {\n    let {\n      inflateAmount\n    } = _ref5;\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n  }\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n    getMaxOverflow() {\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n      const ruler = this._getRuler();\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        const options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n    _getStacks(last, dataIndex) {\n      const {\n        iScale\n      } = this._cachedMeta;\n      const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n      const stacked = iScale.options.stacked;\n      const stacks = [];\n      const skipNull = meta => {\n        const parsed = meta.controller.getParsed(dataIndex);\n        const val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      for (const meta of metasets) {\n        if (dataIndex !== undefined && skipNull(meta)) {\n          continue;\n        }\n        if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n          stacks.push(meta.stack);\n        }\n        if (meta.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        const startPixel = vScale.getPixelForDecimal(0);\n        const endPixel = vScale.getPixelForDecimal(1);\n        const min = Math.min(startPixel, endPixel);\n        const max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const parsed = super.parsePrimitiveData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const parsed = super.parseArrayData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const parsed = super.parseObjectData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    getMaxOverflow() {\n      const data = this._cachedMeta.data;\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      const radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n        }\n      }\n    }\n  };\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n        let i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n          const rotation = controller._getRotation();\n          const circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      const chartWeight = this._getRingWeight(this.index);\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      let startAngle = this._getRotation();\n      let i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n    getMaxOffset(arcs) {\n      let max = 0;\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n            return dataLabel;\n          }\n        }\n      }\n    }\n  };\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      super.initialize();\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const {\n        sharedOptions,\n        includeOptions\n      } = this._getSharedOptions(start, mode);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n  }\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    getMinMax() {\n      const meta = this._cachedMeta;\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach((element, index) => {\n        const parsed = this.getParsed(index).r;\n        if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n    countVisibleElements() {\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n  class PieController extends DoughnutController {}\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n    parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n  class ScatterController extends DatasetController {\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        data: points = []\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        const {\n          dataset: line,\n          _dataset\n        } = meta;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n      const {\n        showLine\n      } = this.options;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const data = meta.data || [];\n      if (!this.options.showLine) {\n        let max = 0;\n        for (let i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n  }\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n  function pathArc(ctx, element, offset, spacing, end, circular) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n      ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n      if (outerEnd > 0) {\n        const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n      }\n      const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n      ctx.lineTo(p4.x, p4.y);\n      if (innerEnd > 0) {\n        const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n      }\n      ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n      if (innerStart > 0) {\n        const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n      }\n      const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n      ctx.lineTo(p8.x, p8.y);\n      if (outerStart > 0) {\n        const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n        ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n      }\n    } else {\n      ctx.moveTo(x, y);\n      const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n      const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerStartX, outerStartY);\n      const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n      const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n      ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n  }\n  function drawArc(ctx, element, offset, spacing, circular) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n  }\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n  function drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n    const {\n      options\n    } = element;\n    const {\n      borderWidth,\n      borderJoinStyle\n    } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n      return;\n    }\n    if (inner) {\n      ctx.lineWidth = borderWidth * 2;\n      ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n      const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      const circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      let radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  function setStyle(ctx, options) {\n    let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n    return lineTo;\n  }\n  function pathVars(points, segment) {\n    let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n      prev = point;\n    }\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n  }\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n      if (point.skip) {\n        continue;\n      }\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n      lastY = y;\n    }\n    drawX();\n  }\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n    return _pointInLine;\n  }\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n      path = line._path = new Path2D();\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  }\n  const usePath2D = typeof Path2D === 'function';\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._chart = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n    get points() {\n      return this._points;\n    }\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      const result = [];\n      const _interpolate = _getInterpolationMethod(options);\n      let i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n      const segments = this.segments;\n      const segmentMethod = _getSegmentMethod(this);\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n      return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n      const options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n  }\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n  function inflateRect(rect, amount) {\n    let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.inflateAmount = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    draw(ctx) {\n      const {\n        inflateAmount,\n        options: {\n          borderColor,\n          backgroundColor\n        }\n      } = this;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n    return decimated;\n  }\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n    return {\n      start,\n      count\n    };\n  }\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n        if (!meta.controller.supportsDecimation) {\n          return;\n        }\n        const xAxis = chart.scales[meta.xAxisID];\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n        if (chart.options.parsing) {\n          return;\n        }\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n        let decimated;\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n        dataset._decimated = decimated;\n      });\n    },\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n  };\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = _findSegmentEnd(start, end, points);\n      const bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      const targetSegments = _boundSegments(target, bounds);\n      for (const tgt of targetSegments) {\n        const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n        const fillSources = _boundSegment(segment, points, subBounds);\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n    return parts;\n  }\n  function _getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n    return {\n      property,\n      start,\n      end\n    };\n  }\n  function _pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(_ref6 => {\n      let {\n        start,\n        end\n      } = _ref6;\n      end = _findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n  function _findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n    return end;\n  }\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n  function _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n  function _shouldApplyFill(source) {\n    return source && source.fill !== false;\n  }\n  function _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n    if (!propagate) {\n      return fill;\n    }\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n      target = sources[fill];\n      if (!target) {\n        return false;\n      }\n      if (target.visible) {\n        return fill;\n      }\n      visited.push(fill);\n      fill = target.fill;\n    }\n    return false;\n  }\n  function _decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n  function decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n      pixel = scale.bottom;\n    } else if (fill === 'end') {\n      pixel = scale.top;\n    } else if (isObject(fill)) {\n      pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      pixel = scale.getBasePixel();\n    }\n    return pixel;\n  }\n  function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n      value = startValue;\n    } else if (fill === 'end') {\n      value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n    return value;\n  }\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n      return false;\n    }\n    if (fill === true) {\n      return 'origin';\n    }\n    return fill;\n  }\n  function _buildStackLine(source) {\n    const {\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n  function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n      if (meta.index === index) {\n        break;\n      }\n      if (!meta.hidden) {\n        below.unshift(meta.dataset);\n      }\n    }\n    return below;\n  }\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n      if (!point || first && last) {\n        continue;\n      }\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n        if (!last) {\n          break;\n        }\n      }\n    }\n    points.push(...postponed);\n  }\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n      return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n      if (_isBetween(pointValue, firstValue, lastValue)) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n    return {\n      first,\n      last,\n      point\n    };\n  }\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n  }\n  function _getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n      return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n      return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n  }\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n  }\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n      const horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? pixel : null,\n        y: horizontal ? null : pixel\n      };\n    }\n    return null;\n  }\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n      const center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n    for (let i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n  }\n  function _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n      clipVertical(ctx, target, area.top);\n      fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n      ctx.restore();\n      ctx.save();\n      clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n    ctx.restore();\n  }\n  function clipVertical(ctx, target, clipY) {\n    const {\n      segments,\n      points\n    } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments) {\n      const {\n        start,\n        end\n      } = segment;\n      const firstPoint = points[start];\n      const lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n  function fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n    const segments = _segments(line, target, property);\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n  var index = {\n    id: 'filler',\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: _decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n        meta.$filler = source;\n        sources.push(source);\n      }\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n        if (!source || source.fill === false) {\n          continue;\n        }\n        source.fill = _resolveTarget(sources, i, options.propagate);\n      }\n    },\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (!source) {\n          continue;\n        }\n        source.line.updateControlPoints(area, source.axis);\n        if (draw && source.fill) {\n          _drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (_shouldApplyFill(source)) {\n          _drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n      if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n      _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n      const titleHeight = this._computeTitleHeight();\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      const titleHeight = this._computeTitleHeight();\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        let row = 0;\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      const isHorizontal = this.isHorizontal();\n      const titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      const x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n    handleEvent(e) {\n      const opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }\n  function isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n    return false;\n  }\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n      return {\n        x,\n        y\n      };\n    }\n  };\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n    return base;\n  }\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n    return str;\n  }\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n    return 'center';\n  }\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n    return xAlign;\n  }\n  function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n    return x;\n  }\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n    return y;\n  }\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.chart = config.chart || config._chart;\n      this._chart = this.chart;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      const chart = this.chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n    _createItems(options) {\n      const active = this._active;\n      const data = this.chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this.chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n    _updateAnimationTarget(options) {\n      const chart = this.chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n    _willRender() {\n      return !!this.opacity;\n    }\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(_ref7 => {\n        let {\n          datasetIndex,\n          index\n        } = _ref7;\n        const meta = this.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n      const positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n    handleEvent(e, replay) {\n      let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      const options = this.options;\n      const lastActive = this._active || [];\n      const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      const positionChanged = this._positionChanged(active, e);\n      const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n      const options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          chart,\n          options\n        });\n      }\n    },\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      if (tooltip && tooltip._willRender()) {\n        const args = {\n          tooltip\n        };\n        if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n          return;\n        }\n        tooltip.draw(chart.ctx);\n        chart.notifyPlugins('afterTooltipDraw', args);\n      }\n    },\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n          args.changed = true;\n        }\n      }\n    },\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n          return '';\n        },\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n          let label = tooltipItem.dataset.label || '';\n          if (label) {\n            label += ': ';\n          }\n          const value = tooltipItem.formattedValue;\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n          return label;\n        },\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: index,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n  const addIfString = (labels, raw, index, addedLabels) => {\n    if (typeof raw === 'string') {\n      index = labels.push(raw) - 1;\n      addedLabels.unshift({\n        index,\n        label: raw\n      });\n    } else if (isNaN(raw)) {\n      index = null;\n    }\n    return index;\n  };\n  function findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n      return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n      this._addedLabels = [];\n    }\n    init(scaleOptions) {\n      const added = this._addedLabels;\n      if (added.length) {\n        const labels = this.getLabels();\n        for (const {\n          index,\n          label\n        } of added) {\n          if (labels[index] === label) {\n            labels.splice(index, 1);\n          }\n        }\n        this._addedLabels = [];\n      }\n      super.init(scaleOptions);\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n    configure() {\n      super.configure();\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n      return this.bottom;\n    }\n  }\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n        if (niceMin < min) {\n          j++;\n        }\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n    return ticks;\n  }\n  function relativeLabelSize(value, minSpacing, _ref8) {\n    let {\n      horizontal,\n      minRotation\n    } = _ref8;\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        let offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      const tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n  }\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  function fitWithPointLabels(scale) {\n    const orig = {\n      l: scale.left + scale._padding.left,\n      r: scale.right - scale._padding.right,\n      t: scale.top + scale._padding.top,\n      b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n      const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n      const angle = Math.round(toDegrees(angleRadians));\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n  function updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n      x = (orig.l - hLimits.start) / sin;\n      limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n      x = (hLimits.end - orig.r) / sin;\n      limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n      y = (orig.t - vLimits.start) / cos;\n      limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n      y = (vLimits.end - orig.b) / cos;\n      limits.b = Math.max(limits.b, orig.b + y);\n    }\n  }\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n      const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n    return items;\n  }\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n    return 'right';\n  }\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n    return x;\n  }\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n    return y;\n  }\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n      if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: backdropLeft,\n            y: backdropTop,\n            w: backdropWidth,\n            h: backdropHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n      }\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n  function createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n    setDimensions() {\n      const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      const w = this.width = this.maxWidth - padding.width;\n      const h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      }).filter((v, i) => this.chart.getDataVisibility(i));\n    }\n    fit() {\n      const opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / (this._pointLabels.length || 1);\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n    getPointPosition(index, distanceFromCenter) {\n      let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this._pointLabels.length;\n      let i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n    drawBorder() {}\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n    drawTitle() {}\n  }\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n      callback(label) {\n        return label;\n      },\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n  function sorter(a, b) {\n    return a - b;\n  }\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n      return null;\n    }\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n  }\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n    return UNITS[ilen - 1];\n  }\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n    return ticks;\n  }\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return parse(this, raw);\n    }\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min,\n        max\n      };\n    }\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      const min = this.min;\n      const max = this.max;\n      const ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(tick => +tick.value));\n      }\n    }\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      const size = this._getLabelSize(exampleLabel);\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = {\n    ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n  return Chart;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","undefined","console","warn","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","_getKeyResolver","_splitKey","parts","split","tmp","part","push","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","arguments","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","_len","_key","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","_len2","rest","_key2","debounce","delay","timeout","_len3","_key3","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","isShort","r","g","hexParse","ret","alpha","hexString","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","calln","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","map$2","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","interpolate$1","rgb1","rgb2","t","modHSL","ratio","clone","proto","fromObject","input","functionParse","Color","_rgb","_valid","valid","mix","color","weight","c1","c2","w2","w1","interpolate","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","width","height","top","bottom","useOffsetPos","shadowRoot","getCanvasPosition","canvas","touches","offsetX","offsetY","box","rect","getBoundingClientRect","clientX","clientY","getRelativePosition","evt","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","xOffset","yOffset","getContainerSize","maxWidth","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","resolve","_resolveScriptable","_resolveArray","Error","join","createSubResolver","arr","filter","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","freeze","__proto__","easingEffects","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","chartArea","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stack","stackWeight","horizontal","isHorizontal","buildStacks","layouts","stacks","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_len4","_key4","_each","_len5","_key5","addControllers","_len6","_key6","_len7","_key7","addPlugins","_len8","_key8","addScales","_len9","_key9","getController","_get","getElement","getPlugin","getScale","removeControllers","_len10","_key10","removeElements","_len11","_key11","removePlugins","_len12","_key12","removeScales","_len13","_key13","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","_ref2","pluginOpts","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","_ref5","inflateAmount","BarController","iAxisKey","vAxisKey","bars","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","baseValue","minBarLength","floating","halfGrid","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_ref6","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref7","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref8","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sources":["/home/parallels/code/astroport/astroport-dashboards/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$2 = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map$2);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map$2[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate$1(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate$1(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\nisPatternOrGradient: isPatternOrGradient,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone$1,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_splitKey: _splitKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\ndrawPointLegend: drawPointLegend,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\n_parseObjectDataRadialScale: _parseObjectDataRadialScale,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_getStartAndCountOfVisiblePoints: _getStartAndCountOfVisiblePoints,\n_scaleRangesChanged: _scaleRangesChanged,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}