{"ast":null,"code":"var _jsxFileName = \"/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport terra from '../../../../assets/StatusReport/terra.png';\nimport injective from '../../../../assets/StatusReport/injective.png';\nimport astroport from '../../../../assets/StatusReport/astroport.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidityPerDeployment = () => {\n  _s();\n  const chartRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.ltv_data;\n        if (data) {\n          createChart(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const createChart = ltvData => {\n      const totalLiquidity = ltvData.reduce((acc, chain) => acc + chain.totalLiquidityUsd, 0);\n      const width = 200;\n      const height = 200;\n      const strokeWidth = 32;\n      const radius = 100 - strokeWidth / 2;\n      const logoRadius = radius - strokeWidth / 2;\n      const svg = d3.select(chartRef.current).attr('width', width).attr('height', height);\n      const pie = d3.pie().sort(null).value(d => d.totalLiquidityUsd).startAngle(Math.PI * 1.1).endAngle(Math.PI * 2.9);\n      const arc = d3.arc().innerRadius(radius - strokeWidth).outerRadius(radius);\n      const arcs = svg.selectAll('.arc').data(pie(ltvData)).enter().append('g').attr('class', 'arc').attr('transform', `translate(${width / 2}, ${height / 2})`);\n      arcs.append('path').attr('d', arc).attr('fill', d => d.data.color).on('mouseover', function () {\n        d3.select(this).attr('fill', d => d3.rgb(d.data.color).brighter(0.5));\n      }).on('mouseout', function () {\n        d3.select(this).attr('fill', d => d.data.color);\n      });\n      const logoImages = {\n        'phoenix-1': terra,\n        'injective-1': injective\n      };\n      arcs.each(function (d) {\n        const centroid = arc.centroid(d);\n        const logoX = centroid[0] * 0.65;\n        const logoY = centroid[1] * 0.65;\n        const chainId = d.data.chainId;\n        d3.select(this).append('image').attr('xlink:href', logoImages[chainId]).attr('x', logoX - 25).attr('y', logoY - 25).attr('width', 50).attr('height', 50);\n      });\n      svg.append('image').attr('xlink:href', astroport).attr('x', width / 2 - 25).attr('y', height / 2 - 25).attr('width', 50).attr('height', 50);\n      svg.append('text').attr('x', width / 2).attr('y', height - 10).attr('text-anchor', 'middle').style('font-size', '14px').style('font-weight', 'bold').style('fill', 'white').text(`Total TVL: ${d3.format(',.1f')(totalLiquidity / 1000000)}M`);\n      arcs.append('line').attr('x1', d => arc.centroid(d)[0] * 0.8).attr('y1', d => arc.centroid(d)[1] * 0.8).attr('x2', d => arc.centroid(d)[0] * 1.1).attr('y2', d => arc.centroid(d)[1] * 1.1).attr('stroke', d => d.data.color).attr('stroke-width', 2);\n      arcs.append('text').attr('x', d => arc.centroid(d)[0] * 1.25).attr('y', d => arc.centroid(d)[1] * 1.25).attr('text-anchor', 'middle').style('font-size', '12px').style('fill', 'white').text(d => `${d3.format(',.1f')(d.data.totalLiquidityUsd / 1000000)}M`);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(LiquidityPerDeployment, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = LiquidityPerDeployment;\nexport default LiquidityPerDeployment;\nvar _c;\n$RefreshReg$(_c, \"LiquidityPerDeployment\");","map":{"version":3,"names":["React","useEffect","useRef","d3","axios","terra","injective","astroport","jsxDEV","_jsxDEV","LiquidityPerDeployment","_s","chartRef","fetchData","_response$data","response","get","data","ltv_data","createChart","JSON","parse","error","console","ltvData","totalLiquidity","reduce","acc","chain","totalLiquidityUsd","width","height","strokeWidth","radius","logoRadius","svg","select","current","attr","pie","sort","value","d","startAngle","Math","PI","endAngle","arc","innerRadius","outerRadius","arcs","selectAll","enter","append","color","on","rgb","brighter","logoImages","each","centroid","logoX","logoY","chainId","style","text","format","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport terra from '../../../../assets/StatusReport/terra.png';\nimport injective from '../../../../assets/StatusReport/injective.png';\nimport astroport from '../../../../assets/StatusReport/astroport.png';\n\nconst LiquidityPerDeployment = () => {\n  const chartRef = useRef();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response?.data?.ltv_data;\n        if (data) {\n          createChart(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const createChart = (ltvData) => {\n      const totalLiquidity = ltvData.reduce((acc, chain) => acc + chain.totalLiquidityUsd, 0);\n      const width = 200;\n      const height = 200;\n      const strokeWidth = 32;\n      const radius = 100 - strokeWidth / 2;\n      const logoRadius = radius - strokeWidth / 2;\n\n      const svg = d3.select(chartRef.current)\n        .attr('width', width)\n        .attr('height', height);\n\n      const pie = d3.pie()\n        .sort(null)\n        .value((d) => d.totalLiquidityUsd)\n        .startAngle(Math.PI * 1.1)\n        .endAngle(Math.PI * 2.9);\n\n      const arc = d3.arc()\n        .innerRadius(radius - strokeWidth)\n        .outerRadius(radius);\n\n      const arcs = svg.selectAll('.arc')\n        .data(pie(ltvData))\n        .enter().append('g')\n        .attr('class', 'arc')\n        .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n      arcs.append('path')\n        .attr('d', arc)\n        .attr('fill', (d) => d.data.color)\n        .on('mouseover', function () {\n          d3.select(this)\n            .attr('fill', (d) => d3.rgb(d.data.color).brighter(0.5));\n        })\n        .on('mouseout', function () {\n          d3.select(this)\n            .attr('fill', (d) => d.data.color);\n        });\n\n      const logoImages = {\n        'phoenix-1': terra,\n        'injective-1': injective\n      };\n\n      arcs.each(function (d) {\n        const centroid = arc.centroid(d);\n        const logoX = centroid[0] * 0.65;\n        const logoY = centroid[1] * 0.65;\n        const chainId = d.data.chainId;\n\n        d3.select(this).append('image')\n          .attr('xlink:href', logoImages[chainId])\n          .attr('x', logoX - 25)\n          .attr('y', logoY - 25)\n          .attr('width', 50)\n          .attr('height', 50);\n      });\n\n      svg.append('image')\n        .attr('xlink:href', astroport)\n        .attr('x', width / 2 - 25)\n        .attr('y', height / 2 - 25)\n        .attr('width', 50)\n        .attr('height', 50);\n\n        svg.append('text')\n        .attr('x', width / 2)\n        .attr('y', height - 10)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '14px')\n        .style('font-weight', 'bold')\n        .style('fill', 'white')\n        .text(`Total TVL: ${d3.format(',.1f')(totalLiquidity / 1000000)}M`);\n\n      arcs.append('line')\n        .attr('x1', (d) => arc.centroid(d)[0] * 0.8)\n        .attr('y1', (d) => arc.centroid(d)[1] * 0.8)\n        .attr('x2', (d) => arc.centroid(d)[0] * 1.1)\n        .attr('y2', (d) => arc.centroid(d)[1] * 1.1)\n        .attr('stroke', (d) => d.data.color)\n        .attr('stroke-width', 2);\n\n      arcs.append('text')\n        .attr('x', (d) => arc.centroid(d)[0] * 1.25)\n        .attr('y', (d) => arc.centroid(d)[1] * 1.25)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '12px')\n        .style('fill', 'white')\n        .text((d) => `${d3.format(',.1f')(d.data.totalLiquidityUsd / 1000000)}M`);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <svg ref={chartRef}></svg>\n    </div>\n  );\n};\n\nexport default LiquidityPerDeployment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}