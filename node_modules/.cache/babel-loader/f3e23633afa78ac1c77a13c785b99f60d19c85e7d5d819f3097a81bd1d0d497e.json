{"ast":null,"code":"var _jsxFileName = \"/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidityPerDeployment = () => {\n  _s();\n  const [ltvData, setLtvData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.ltv_data;\n        if (data) {\n          setLtvData(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const createDoughnutChart = () => {\n    const data = ltvData.map(chain => chain.totalLiquidityUsd);\n    const labels = ltvData.map(chain => chain.chainId);\n    const colors = ltvData.map(chain => chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB');\n    const total = data.reduce((acc, val) => acc + val, 0);\n    const angles = data.map(val => val / total * 1.6 * Math.PI); // Change 2 to 1.6 for 80% coverage\n\n    let startAngle = 0.2 * Math.PI; // Change 0 to 0.2 for 20% empty space at the bottom\n\n    return angles.map((angle, index) => {\n      const x1 = 50 + 40 * Math.cos(startAngle);\n      const y1 = 50 - 40 * Math.sin(startAngle);\n      startAngle += angle;\n      const x2 = 50 + 40 * Math.cos(startAngle);\n      const y2 = 50 - 40 * Math.sin(startAngle);\n      const largeArc = angle > Math.PI ? 1 : 0;\n      const path = `M50 50 L${x1} ${y1} A40 40 0 ${largeArc} 1 ${x2} ${y2} Z`;\n      return /*#__PURE__*/_jsxDEV(\"path\", {\n        d: path,\n        fill: colors[index],\n        stroke: \"white\",\n        strokeWidth: \"2\",\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: `${labels[index]}: ${data[index]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liquidity per Deployment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a sample Liquidity Per Deployment component.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 100 100\",\n      width: \"200\",\n      height: \"200\",\n      children: createDoughnutChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LiquidityPerDeployment, \"EerKI5HSOXMNYouRTo91jYOmJAg=\");\n_c = LiquidityPerDeployment;\nexport default LiquidityPerDeployment;\nvar _c;\n$RefreshReg$(_c, \"LiquidityPerDeployment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LiquidityPerDeployment","_s","ltvData","setLtvData","fetchData","_response$data","response","get","data","ltv_data","JSON","parse","error","console","createDoughnutChart","map","chain","totalLiquidityUsd","labels","chainId","colors","total","reduce","acc","val","angles","Math","PI","startAngle","angle","index","x1","cos","y1","sin","x2","y2","largeArc","path","d","fill","stroke","strokeWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","_c","$RefreshReg$"],"sources":["/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst LiquidityPerDeployment = () => {\n  const [ltvData, setLtvData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response?.data?.ltv_data;\n        if (data) {\n          setLtvData(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const createDoughnutChart = () => {\n    const data = ltvData.map(chain => chain.totalLiquidityUsd);\n    const labels = ltvData.map(chain => chain.chainId);\n    const colors = ltvData.map(chain =>\n      chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB'\n    );\n  \n    const total = data.reduce((acc, val) => acc + val, 0);\n    const angles = data.map(val => (val / total) * 1.6 * Math.PI); // Change 2 to 1.6 for 80% coverage\n  \n    let startAngle = 0.2 * Math.PI; // Change 0 to 0.2 for 20% empty space at the bottom\n  \n    return angles.map((angle, index) => {\n      const x1 = 50 + 40 * Math.cos(startAngle);\n      const y1 = 50 - 40 * Math.sin(startAngle);\n  \n      startAngle += angle;\n  \n      const x2 = 50 + 40 * Math.cos(startAngle);\n      const y2 = 50 - 40 * Math.sin(startAngle);\n  \n      const largeArc = angle > Math.PI ? 1 : 0;\n  \n      const path = `M50 50 L${x1} ${y1} A40 40 0 ${largeArc} 1 ${x2} ${y2} Z`;\n  \n      return (\n        <path\n          key={index}\n          d={path}\n          fill={colors[index]}\n          stroke=\"white\"\n          strokeWidth=\"2\"\n        >\n          <title>{`${labels[index]}: ${data[index]}`}</title>\n        </path>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <h3>Liquidity per Deployment</h3>\n      <p>This is a sample Liquidity Per Deployment component.</p>\n      <svg viewBox=\"0 0 100 100\" width=\"200\" height=\"200\">\n        {createDoughnutChart()}\n      </svg>\n    </div>\n  );\n};\n\nexport default LiquidityPerDeployment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}