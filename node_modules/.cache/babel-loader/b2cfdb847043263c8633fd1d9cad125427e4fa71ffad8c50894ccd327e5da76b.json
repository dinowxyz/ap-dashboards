{"ast":null,"code":"var _jsxFileName = \"/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidityPerDeployment = () => {\n  _s();\n  const [ltvData, setLtvData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.ltv_data;\n        if (data) {\n          setLtvData(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const totalLiquidity = ltvData.reduce((acc, chain) => acc + chain.totalLiquidityUsd, 0);\n  const strokeWidth = 32;\n  const radius = 100 - strokeWidth / 2;\n  const circumference = 2 * Math.PI * radius;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liquidity per Deployment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a sample Liquidity Per Deployment component.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"200\",\n      height: \"200\",\n      viewBox: \"0 0 200 200\",\n      children: [ltvData.map((chain, index) => {\n        const chainPercentage = chain.totalLiquidityUsd / totalLiquidity;\n        const dashArray = circumference * chainPercentage;\n        const dashOffset = index === 0 ? 0 : ltvData.slice(0, index).reduce((acc, prevChain) => acc + prevChain.totalLiquidityUsd / totalLiquidity, 0) * circumference;\n        const color = chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB';\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"100\",\n          cy: \"100\",\n          r: radius,\n          strokeWidth: strokeWidth,\n          stroke: color,\n          fill: \"none\",\n          strokeDasharray: `${dashArray} ${circumference}`,\n          strokeDashoffset: circumference - dashOffset,\n          strokeLinecap: \"round\",\n          transform: \"rotate(-90 100 100)\"\n        }, chain.chainId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"100\",\n        cy: \"100\",\n        r: radius - strokeWidth / 2,\n        strokeWidth: strokeWidth,\n        stroke: \"white\",\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LiquidityPerDeployment, \"EerKI5HSOXMNYouRTo91jYOmJAg=\");\n_c = LiquidityPerDeployment;\nexport default LiquidityPerDeployment;\nvar _c;\n$RefreshReg$(_c, \"LiquidityPerDeployment\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LiquidityPerDeployment","_s","ltvData","setLtvData","fetchData","_response$data","response","get","data","ltv_data","JSON","parse","error","console","totalLiquidity","reduce","acc","chain","totalLiquidityUsd","strokeWidth","radius","circumference","Math","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","map","index","chainPercentage","dashArray","dashOffset","slice","prevChain","color","chainId","cx","cy","r","stroke","fill","strokeDasharray","strokeDashoffset","strokeLinecap","transform","_c","$RefreshReg$"],"sources":["/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst LiquidityPerDeployment = () => {\n  const [ltvData, setLtvData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5001/api/data');\n        const data = response?.data?.ltv_data;\n        if (data) {\n          setLtvData(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const totalLiquidity = ltvData.reduce((acc, chain) => acc + chain.totalLiquidityUsd, 0);\n  const strokeWidth = 32;\n  const radius = 100 - strokeWidth / 2;\n  const circumference = 2 * Math.PI * radius;\n\n  return (\n    <div>\n      <h3>Liquidity per Deployment</h3>\n      <p>This is a sample Liquidity Per Deployment component.</p>\n      <svg width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\n        {ltvData.map((chain, index) => {\n          const chainPercentage = chain.totalLiquidityUsd / totalLiquidity;\n          const dashArray = circumference * chainPercentage;\n          const dashOffset = index === 0 ? 0 : ltvData.slice(0, index).reduce((acc, prevChain) => acc + prevChain.totalLiquidityUsd / totalLiquidity, 0) * circumference;\n          const color = chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB';\n\n          return (\n            <circle\n              key={chain.chainId}\n              cx=\"100\"\n              cy=\"100\"\n              r={radius}\n              strokeWidth={strokeWidth}\n              stroke={color}\n              fill=\"none\"\n              strokeDasharray={`${dashArray} ${circumference}`}\n              strokeDashoffset={circumference - dashOffset}\n              strokeLinecap=\"round\"\n              transform=\"rotate(-90 100 100)\"\n            />\n          );\n        })}\n        <circle\n          cx=\"100\"\n          cy=\"100\"\n          r={radius - strokeWidth / 2}\n          strokeWidth={strokeWidth}\n          stroke=\"white\"\n          fill=\"none\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default LiquidityPerDeployment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QAAA,IAAAC,cAAA;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC;QAClE,MAAMC,IAAI,GAAGF,QAAQ,aAARA,QAAQ,wBAAAD,cAAA,GAARC,QAAQ,CAAEE,IAAI,cAAAH,cAAA,uBAAdA,cAAA,CAAgBI,QAAQ;QACrC,IAAID,IAAI,EAAE;UACRL,UAAU,CAACO,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,CAAC;QAC9B;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,cAAc,GAAGZ,OAAO,CAACa,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,iBAAiB,EAAE,CAAC,CAAC;EACvF,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAMC,MAAM,GAAG,GAAG,GAAGD,WAAW,GAAG,CAAC;EACpC,MAAME,aAAa,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,MAAM;EAE1C,oBACErB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC7B,OAAA;MAAAyB,QAAA,EAAG;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3D7B,OAAA;MAAK8B,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAACC,OAAO,EAAC,aAAa;MAAAP,QAAA,GAChDtB,OAAO,CAAC8B,GAAG,CAAC,CAACf,KAAK,EAAEgB,KAAK,KAAK;QAC7B,MAAMC,eAAe,GAAGjB,KAAK,CAACC,iBAAiB,GAAGJ,cAAc;QAChE,MAAMqB,SAAS,GAAGd,aAAa,GAAGa,eAAe;QACjD,MAAME,UAAU,GAAGH,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG/B,OAAO,CAACmC,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAClB,MAAM,CAAC,CAACC,GAAG,EAAEsB,SAAS,KAAKtB,GAAG,GAAGsB,SAAS,CAACpB,iBAAiB,GAAGJ,cAAc,EAAE,CAAC,CAAC,GAAGO,aAAa;QAC9J,MAAMkB,KAAK,GAAGtB,KAAK,CAACuB,OAAO,KAAK,aAAa,GAAG,SAAS,GAAG,SAAS;QAErE,oBACEzC,OAAA;UAEE0C,EAAE,EAAC,KAAK;UACRC,EAAE,EAAC,KAAK;UACRC,CAAC,EAAEvB,MAAO;UACVD,WAAW,EAAEA,WAAY;UACzByB,MAAM,EAAEL,KAAM;UACdM,IAAI,EAAC,MAAM;UACXC,eAAe,EAAG,GAAEX,SAAU,IAAGd,aAAc,EAAE;UACjD0B,gBAAgB,EAAE1B,aAAa,GAAGe,UAAW;UAC7CY,aAAa,EAAC,OAAO;UACrBC,SAAS,EAAC;QAAqB,GAV1BhC,KAAK,CAACuB,OAAO;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWnB,CAAC;MAEN,CAAC,CAAC,eACF7B,OAAA;QACE0C,EAAE,EAAC,KAAK;QACRC,EAAE,EAAC,KAAK;QACRC,CAAC,EAAEvB,MAAM,GAAGD,WAAW,GAAG,CAAE;QAC5BA,WAAW,EAAEA,WAAY;QACzByB,MAAM,EAAC,OAAO;QACdC,IAAI,EAAC;MAAM;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA9DID,sBAAsB;AAAAkD,EAAA,GAAtBlD,sBAAsB;AAgE5B,eAAeA,sBAAsB;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}