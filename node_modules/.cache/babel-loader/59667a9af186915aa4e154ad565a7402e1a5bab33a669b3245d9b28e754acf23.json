{"ast":null,"code":"var _jsxFileName = \"/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Chart } from 'chart.js/auto';\nimport { Doughnut } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidityPerDeployment = () => {\n  _s();\n  const [ltvData, setLtvData] = useState([]);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('http://127.0.0.1:5001/api/data');\n      const data = JSON.parse(response.data.ltv_data);\n      setLtvData(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (ltvData.length > 0 && chartRef.current) {\n      const chartData = {\n        labels: ltvData.map(chain => chain.chainId),\n        datasets: [{\n          data: ltvData.map(chain => chain.totalLiquidityUsd),\n          backgroundColor: ltvData.map(chain => chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB')\n        }]\n      };\n      new Chart(chartRef.current, {\n        type: 'doughnut',\n        data: chartData\n      });\n    }\n  }, [ltvData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Liquidity per Deployment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a sample Liquidity Per Deployment component.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LiquidityPerDeployment, \"9I8wPnx6OOS0Bp6T9P0+jj+koHU=\");\n_c = LiquidityPerDeployment;\nexport default LiquidityPerDeployment;\nvar _c;\n$RefreshReg$(_c, \"LiquidityPerDeployment\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Chart","Doughnut","jsxDEV","_jsxDEV","LiquidityPerDeployment","_s","ltvData","setLtvData","chartRef","fetchData","response","get","data","JSON","parse","ltv_data","length","current","chartData","labels","map","chain","chainId","datasets","totalLiquidityUsd","backgroundColor","type","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/parallels/code/astroport/astroport-dashboards/src/components/Dashboards/StatusReport/LiquidityPerDeployment/LiquidityPerDeployment.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Chart } from 'chart.js/auto';\nimport { Doughnut } from 'chart.js';\n\nconst LiquidityPerDeployment = () => {\n  const [ltvData, setLtvData] = useState([]);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('http://127.0.0.1:5001/api/data');\n      const data = JSON.parse(response.data.ltv_data);\n      setLtvData(data);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (ltvData.length > 0 && chartRef.current) {\n      const chartData = {\n        labels: ltvData.map(chain => chain.chainId),\n        datasets: [\n          {\n            data: ltvData.map(chain => chain.totalLiquidityUsd),\n            backgroundColor: ltvData.map(chain =>\n              chain.chainId === 'injective-1' ? '#FF6384' : '#36A2EB'\n            ),\n          },\n        ],\n      };\n\n      new Chart(chartRef.current, {\n        type: 'doughnut',\n        data: chartData,\n      });\n    }\n  }, [ltvData]);\n\n  return (\n    <div>\n      <h3>Liquidity per Deployment</h3>\n      <p>This is a sample Liquidity Per Deployment component.</p>\n      <Doughnut ref={chartRef} />\n    </div>\n  );\n};\n\nexport default LiquidityPerDeployment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;MAClE,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,QAAQ,CAAC;MAC/CR,UAAU,CAACK,IAAI,CAAC;IAClB,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,IAAIS,OAAO,CAACU,MAAM,GAAG,CAAC,IAAIR,QAAQ,CAACS,OAAO,EAAE;MAC1C,MAAMC,SAAS,GAAG;QAChBC,MAAM,EAAEb,OAAO,CAACc,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAO,CAAC;QAC3CC,QAAQ,EAAE,CACR;UACEX,IAAI,EAAEN,OAAO,CAACc,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACG,iBAAiB,CAAC;UACnDC,eAAe,EAAEnB,OAAO,CAACc,GAAG,CAACC,KAAK,IAChCA,KAAK,CAACC,OAAO,KAAK,aAAa,GAAG,SAAS,GAAG,SAChD;QACF,CAAC;MAEL,CAAC;MAED,IAAItB,KAAK,CAACQ,QAAQ,CAACS,OAAO,EAAE;QAC1BS,IAAI,EAAE,UAAU;QAChBd,IAAI,EAAEM;MACR,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACZ,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC5B,OAAA;MAAAwB,QAAA,EAAG;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3D5B,OAAA,CAACF,QAAQ;MAAC+B,GAAG,EAAExB;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1CID,sBAAsB;AAAA6B,EAAA,GAAtB7B,sBAAsB;AA4C5B,eAAeA,sBAAsB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}